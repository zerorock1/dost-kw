{"remainingRequest":"/Users/carlosmartinez/Desktop/ENCURSO/003-FER/fer-inmobiliaria-kw/buscador-vue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/carlosmartinez/Desktop/ENCURSO/003-FER/fer-inmobiliaria-kw/buscador-vue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/carlosmartinez/Desktop/ENCURSO/003-FER/fer-inmobiliaria-kw/buscador-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/carlosmartinez/Desktop/ENCURSO/003-FER/fer-inmobiliaria-kw/buscador-vue/src/components/Formficha.vue?vue&type=template&id=5e327c35&","dependencies":[{"path":"/Users/carlosmartinez/Desktop/ENCURSO/003-FER/fer-inmobiliaria-kw/buscador-vue/src/components/Formficha.vue","mtime":1636732021094},{"path":"/Users/carlosmartinez/Desktop/ENCURSO/003-FER/fer-inmobiliaria-kw/buscador-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlosmartinez/Desktop/ENCURSO/003-FER/fer-inmobiliaria-kw/buscador-vue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/carlosmartinez/Desktop/ENCURSO/003-FER/fer-inmobiliaria-kw/buscador-vue/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/carlosmartinez/Desktop/ENCURSO/003-FER/fer-inmobiliaria-kw/buscador-vue/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}